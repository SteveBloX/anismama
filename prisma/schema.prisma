// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  username String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  mangaProgressions MangaProgression[]
  favoritedMangas   FavoritedManga[]
  WatchlistedManga  WatchlistedManga[]
}

model FavoritedManga {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  mangaId String
}

model WatchlistedManga {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  mangaId String
}

model MangaProgression {
  id        String    @id @default(cuid())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  mangaId   String
  progress  String // json
  finished  Boolean
  timesFinished Int @default(0)
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}
