// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  username String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password   Password?
  userMangas UserManga[]
}

model Manga {
  id             String      @id @default(cuid())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  mangaId        String      @unique
  title          String
  description    String
  cover          String?
  chaptersAmount Int
  tags           String      @default("[]") // JSON
  userMangas     UserManga[]
  provider       String?     @default("animeSama")
}

model UserManga {
  id            String    @id @default(cuid())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  manga         Manga?    @relation(fields: [mangaId], references: [mangaId])
  mangaId       String?
  progress      String    @default("{}")
  finished      Boolean   @default(false)
  timesFinished Int       @default(0)
  isFavorited   Boolean   @default(false)
  isWatchlisted Boolean   @default(false)
  rating        Float?
  isCrushed     Boolean   @default(false)
  startedAt     DateTime?
  lastReadAt    DateTime?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}
